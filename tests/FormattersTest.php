<?php declare(strict_types = 1);

namespace Mikk3lRo\atomix\Tests;

use Mikk3lRo\atomix\utilities\Formatters;
use PHPUnit\Framework\TestCase;

/**
 * @covers Mikk3lRo\atomix\utilities\Formatters
 */
final class FormattersTest extends TestCase
{
    public function testCanFormatBytes()
    {
        $expected = array (
            100 => '100B',
            150 => '150B',
            225 => '225B',
            337 => '337B',
            506 => '506B',
            759 => '0.7KiB',
            1139 => '1.1KiB',
            1708 => '1.7KiB',
            2562 => '2.5KiB',
            3844 => '3.8KiB',
            5766 => '5.6KiB',
            8649 => '8.4KiB',
            12974 => '13KiB',
            19461 => '19KiB',
            29192 => '29KiB',
            43789 => '43KiB',
            65684 => '64KiB',
            98526 => '96KiB',
            147789 => '144KiB',
            221683 => '216KiB',
            332525 => '325KiB',
            498788 => '487KiB',
            748182 => '0.7MiB',
            1122274 => '1.1MiB',
            1683411 => '1.6MiB',
            2525116 => '2.4MiB',
            3787675 => '3.6MiB',
            5681512 => '5.4MiB',
            8522269 => '8.1MiB',
            12783403 => '12MiB',
            19175105 => '18MiB',
            28762658 => '27MiB',
            43143988 => '41MiB',
            64715982 => '62MiB',
            97073973 => '93MiB',
            145610960 => '139MiB',
            218416440 => '208MiB',
            327624661 => '312MiB',
            491436992 => '469MiB',
            737155488 => '0.7GiB',
            1105733232 => '1GiB',
            1658599848 => '1.5GiB',
            2487899772 => '2.3GiB',
            3731849658 => '3.5GiB',
            5597774487 => '5.2GiB',
            8396661731 => '7.8GiB',
            12594992596 => '12GiB',
            18892488895 => '18GiB',
            28338733342 => '26GiB',
            42508100014 => '40GiB',
            63762150021 => '59GiB',
            95643225032 => '89GiB',
            143464837548 => '134GiB',
            215197256322 => '200GiB',
            322795884483 => '301GiB',
            484193826725 => '451GiB',
            726290740087 => '0.7TiB',
            1089436110131 => '1TiB',
            1634154165197 => '1.5TiB',
            2451231247795 => '2.2TiB',
            3676846871693 => '3.3TiB',
            5515270307539 => '5TiB',
            8272905461309 => '7.5TiB',
            12409358191964 => '11TiB',
            18614037287947 => '17TiB',
            27921055931921 => '25TiB',
            41881583897881 => '38TiB',
            62822375846822 => '57TiB',
            94233563770233 => '86TiB',
            141350345655350 => '129TiB',
            212025518483025 => '193TiB',
            318038277724537 => '289TiB',
            477057416586806 => '434TiB',
            715586124880210 => '0.6PiB',
            1073379187320315 => '1PiB',
            1610068780980473 => '1.4PiB',
            2415103171470709 => '2.1PiB',
            3622654757206064 => '3.2PiB',
            5433982135809096 => '4.8PiB',
            8150973203713644 => '7.2PiB',
            12226459805570466 => '11PiB',
            18339689708355700 => '16PiB',
            27509534562533552 => '24PiB',
            41264301843800328 => '37PiB',
            61896452765700496 => '55PiB',
            92844679148550752 => '82PiB',
            139267018722826128 => '124PiB',
            208900528084239200 => '186PiB',
            313350792126358784 => '278PiB',
            470026188189538176 => '417PiB',
            705039282284307200 => '0.6EiB',
            1057558923426460800 => '0.9EiB',
            1586338385139691264 => '1.4EiB',
            2379507577709536768 => '2.1EiB',
            3569261366564304896 => '3.1EiB',
            5353892049846457344 => '4.6EiB',
            8030838074769686528 => '7EiB',
          );

        foreach ($expected as $input => $outputExpected) {
            $outputActual = Formatters::niceBytes($input);
            $this->assertEquals($outputExpected, $outputActual);
        }

        //Well... we're past the max int on 64-bit systems...
        //so we can't use an array key for the last one...
        $finalTest = 8030838074769686528;
        $this->assertEquals('70EiB', Formatters::niceBytes($finalTest * 10));
    }
}
